haproxy_log_requests: false

haproxy_http_port: 80
haproxy_https_port: 443

haproxy_endpoints:
  -
    # Runtime name of the container
    # (defined by the `docker_container` module `name` parameter)
    name: "portainer"
    # The host on which the service will be exposed
    host: "infra.{{ allspark_root_domain }}"
    # An alias on the enabled feature toggle
    enabled: "{{ allspark_portainer.enabled }}"
    # List of object with the following properties:
    # - mode: http|tcp
    # - port: the listening container port to expose
    # - exposed_port: The port exposed on the host machine (only for tcp mode)
    backends:
      # # Sample HTTP backend
      # - port: 8080
      #   mode: http
      # # Sample TCP backend
      # - port: 6578
      #   mode: tcp
      #   exposed_port: 6578
      - port: 9000
        mode: http

  - name: prometheus
    host: "metrics.{{ allspark_root_domain }}"
    enabled: "{{ allspark_monitoring.enabled }}"
    backends:
    - mode: http
      port: 9090

  - name: grafana
    host: "monitoring.{{ allspark_root_domain }}"
    enabled: "{{ allspark_monitoring.enabled }}"
    backends:
    - mode: http
      port: 3000

  - name: mattermost
    enabled: "{{ allspark_mattermost.enabled }}"
    host: "mattermost.{{ allspark_root_domain }}"
    backends:
    - mode: http
      port: 8000

  - name: intradb
    enabled: "{{ allspark_intranet.enabled }}"
    host: "intradb.{{ allspark_root_domain }}"
    backends:
    - mode: http
      port: 5432

  - name: intranet
    enabled: "{{ allspark_intranet.enabled }}"
    host: "intranet.{{ allspark_root_domain }}"
    backends:
    - mode: http
      port: 8080

  - name: web
    enabled: "{{ allspark_web.enabled }}"
    host: "{{ allspark_root_domain }}"
    backends:
    - mode: http
      port: 80
    - mode: https
      port: 443

  - name: kodidb
    enabled: "{{ allspark_kodidb.enabled }}"
    host: "kodidb.{{ allspark_root_domain }}"
    backends:
    - mode: tcp
      port: 3306
      exposed_port: 3307
